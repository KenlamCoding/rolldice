{"version":3,"sources":["component/Dice.js","App.js","reportWebVitals.js","index.js"],"names":["Dice","_ref","id","value","select","mode","React","createElement","Fragment","number","parseInt","className","console","log","showDice","GAMEMODE","App","_useState","useState","_useState2","_slicedToArray","setModel","_useState3","useId","_useState4","dices","setDice","start","nowMode","map","index","key","onClick","e","tempIndex","currentDices","dice","_objectSpread","toggleDice","tempNum","Math","random","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.70164c81.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../asset/dice.css\"\r\nexport default function Dice({\r\n    id,\r\n    value,\r\n    select,\r\n    mode\r\n}) {\r\n    function showDice(number){\r\n        var temp = parseInt(value)\r\n        switch (temp) {\r\n            case 1:\r\n                return (<div className ={select&&mode===\"LUCKY\"?'dice firstFace select':'dice firstFace '}  id={id}><span className = \"dot\"> </span> </div>);\r\n            case 2:\r\n                return ( <div  className =  {\r\n                            select&&mode===\"LUCKY\" ? \"dice secondFace select\" : \"dice secondFace \"\r\n                        }  id={id}>\r\n                            <span className=\"dot\"> </span>\r\n                            <span className=\"dot\"> </span>\r\n                        </div>);\r\n            case 3:\r\n                return ( <div className={select&&mode===\"LUCKY\" ? \"dice thirdFace select\" : \"dice thirdFace \"\r\n                        }  id={id}>\r\n                            <span className=\"dot\"> </span>\r\n                            <span className=\"dot\"> </span>\r\n                            <span className=\"dot\"> </span>\r\n                        </div>);\r\n            case 4:\r\n                return (<div className = {select&&mode===\"LUCKY\" ? \"dice fourthFace select\" : \"dice fourthFace \"} id={id}>\r\n                            <div className=\"col\">\r\n                                <span className=\"dot\"> </span>\r\n                                <span className=\"dot\"> </span>\r\n                            </div>\r\n                            \r\n                            <div className=\"col\">\r\n                                <span className=\"dot\"> </span>\r\n                                <span className=\"dot\"> </span>\r\n                            </div>\r\n                            \r\n                        </div>);\r\n            case 5:\r\n                return (<div className={select&&mode===\"LUCKY\"?\"dice fifthFace select\":\"dice fifthFace\"} id={id}>\r\n                            <div className=\"col\">\r\n                                <span className=\"dot\"> </span>\r\n                                <span className=\"dot\"> </span>\r\n                            </div>\r\n                            <span className=\"dot\"> </span>\r\n                            <div className=\"col\">\r\n                                <span className=\"dot\"> </span>\r\n                                <span className=\"dot\"> </span>\r\n                            </div>\r\n                        </div>);\r\n            case 6:\r\n                return(<div className={select&&mode===\"LUCKY\" ? \"dice sixthFace select\" : \"dice sixthFace\"} id={id}>\r\n                            <div  className = \"col\" >\r\n                                <span className=\"dot\"> </span>\r\n                                <span className=\"dot\"> </span>\r\n                                <span className=\"dot\"> </span>\r\n                            </div>\r\n                            <div  className = \"col\" >\r\n                                <span className=\"dot\"> </span>\r\n                                <span className=\"dot\"> </span>\r\n                                <span className=\"dot\"> </span>\r\n                            </div>\r\n                        </div>);\r\n            default:\r\n                console.log(\"not in 1-6\");\r\n        }\r\n\r\n    }\r\n    return(\r\n        <>\r\n            {\r\n                showDice({value})\r\n            }\r\n        </>\r\n    )\r\n}","\nimport {\n  React,\n  useState,\n  useId\n} from \"react\";\nimport Dice from \"./component/Dice\";\nconst GAMEMODE = \n  [\"LUCKY\", \"LIAR\"]\n;\nfunction App() {\n  const [mode, setModel] = useState(GAMEMODE[0])\n  const [dices, setDice] = useState([{\n    id: useId(),\n    value:1,\n    select: false\n  }, {\n    id: useId(),\n    value: 2,\n    select: false\n  }, {\n    id: useId(),\n    value: 3,\n    select: false\n  }, {\n    id: useId(),\n    value: 4,\n    select: false\n  }, {\n    id: useId(),\n    value: 5,\n    select: false\n  }, {\n    id: useId(),\n    value: 6,\n    select: false\n  },\n]);\n\n  function start(nowMode){\n    setModel(nowMode);\n  }\n\n  function rollAllDices(){\n    setDice((currentDices)=>{\n      return currentDices.map(dice=>{\n        let tempNum = 1 + Math.random() * (6 - 1)\n        return {\n          ...dice,\n          value: tempNum\n        }\n      })\n    })\n  }\n\n  function toggleDice(index){\n    let tempIndex = parseInt(index)\n    setDice((currentDices)=>{\n      return currentDices.map(dice=>{\n        if (dice.id === tempIndex) {\n            return {...dice, select: !dice.select}\n        }\n        return dice\n      })\n    })\n    console.log(dices)\n  }\n\n  function rollspecificDices(){\n    setDice(currentDices => currentDices.map(dice => {\n     \n      if (dice.select) {\n        let tempNum = 1 + Math.random() * (6 - 1)\n        return {\n          ...dice,\n          value: tempNum\n        }\n      }\n      return dice;\n    }))\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        {mode}\n      </div>\n      <div className=\"DicesArea\">\n          {\n            dices && dices.map((showDice, index)=>{\n              return <div key={index}>\n                      <label>\n                        {mode===GAMEMODE[0]&& <button id={showDice.id} onClick={e=>toggleDice(showDice.id)}></button>}\n                       \n                        < Dice id = {\n                          showDice.id\n                        }\n                        value = {\n                          showDice.value\n                        }\n                        select = {\n                          showDice.select\n                        }\n                        mode={mode}\n                        />\n                      </label>\n                    </div>\n            })\n          }\n      </div>\n      <div>\n        <button onClick = {()=>start(GAMEMODE[0])} >幸運 </button>\n        <button  onClick={()=>start(GAMEMODE[1])}>大話</button>\n      </div>\n      \n      <button>Reset</button>\n        {mode === GAMEMODE[0]&&(<button onClick={rollspecificDices}>Lucky Roll</button>)}\n        {mode === GAMEMODE[1]&&(<button onClick={rollAllDices}>Liar Roll</button>)}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport Dice from './component/Dice';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}